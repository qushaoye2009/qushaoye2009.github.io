(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{275:function(t,a,e){"use strict";e.r(a);var n=e(28),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"使用uni-app开发移动端应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用uni-app开发移动端应用"}},[t._v("#")]),t._v(" 使用uni-app开发移动端应用")]),t._v(" "),e("p",[t._v("针对开发需求量最大的小程序应用，我们基于uni-app这个使用人数最多且相对稳定的跨端开发框架和我们公司正在使用的小程序，讲解开发一个小程序的主要过程和核心知识技能，以及框架是如何支持多种小程序、H5和原生app的原理。")]),t._v(" "),e("p",[t._v("对应的视频教程请访问： "),e("a",{attrs:{href:"http://t.yibiankeji.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://t.yibiankeji.com/"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"_01-课程简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_01-课程简介"}},[t._v("#")]),t._v(" 01 课程简介")]),t._v(" "),e("h3",{attrs:{id:"_1-1-什么是移动互联网"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是移动互联网"}},[t._v("#")]),t._v(" 1.1 什么是移动互联网")]),t._v(" "),e("p",[t._v("移动互联网是PC互联网发展的必然产物，将移动通信和互联网二者结合起来，成为一体。它是互联网的技术、平台、商业模式和应用与移动通信技术结合并实践的活动的总称。")]),t._v(" "),e("p",[t._v("目前，移动互联网正逐渐渗透到人们生活、工作的各个领域，微信、支付宝、位置服务等丰富多彩的移动互联网应用迅猛发展，正在深刻改变信息时代的社会生活，近几年，更是实现了3G经4G到5G的跨越式发展。")]),t._v(" "),e("h3",{attrs:{id:"_1-2-什么是移动端应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-什么是移动端应用"}},[t._v("#")]),t._v(" 1.2 什么是移动端应用")]),t._v(" "),e("p",[t._v("伴随移动互联网的快速发展，移动客户端的使用数据量正在超越PC端，而这一现象主要的推力应归公于手机app应用的迅速发展。")]),t._v(" "),e("p",[t._v("移动端的应用，主要包括苹果手机原生APP，各种Android原生APP，基于手机浏览器的网页应用，微信、支付宝、头条等各种小程序，以及快应用等。")]),t._v(" "),e("h3",{attrs:{id:"_1-3-什么是uni-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-什么是uni-app"}},[t._v("#")]),t._v(" 1.3 什么是uni-app?")]),t._v(" "),e("p",[t._v("uni-app 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、H5、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉）等多个平台。")]),t._v(" "),e("p",[t._v("uni-app在手，做啥都不愁。即使不跨端，uni-app也是更好的小程序开发框架（详见）、更好的App跨平台框架、更方便的H5开发框架。不管领导安排什么样的项目，你都可以快速交付，不需要转换开发思维、不需要更改开发习惯。")]),t._v(" "),e("h3",{attrs:{id:"_1-4-为什么要选择uni-app？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-为什么要选择uni-app？"}},[t._v("#")]),t._v(" 1.4 为什么要选择uni-app？")]),t._v(" "),e("p",[t._v("uni-app在开发者数量、案例、跨端抹平度、扩展灵活性、性能体验、周边生态、学习成本、开发成本等8大关键指标上拥有更强的优势。")]),t._v(" "),e("p",[t._v("一套代码，同时运行到iOS模拟器、Android模拟器、H5、微信开发者工具、支付宝小程序Studio、百度开发者工具、字节跳动开发者工具、QQ开发者工具。")]),t._v(" "),e("h3",{attrs:{id:"_1-5-都有哪些多端框架？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-都有哪些多端框架？"}},[t._v("#")]),t._v(" 1.5 都有哪些多端框架？")]),t._v(" "),e("p",[t._v("现在流行的多端框架可以大致分为三类：")]),t._v(" "),e("ul",[e("li",[t._v("全包型：从底层的渲染引擎、布局引擎，到中层的 DSL，再到上层的框架全部由自己开发，代表框架是 Qt 和 Flutter。优点非常明显：性能（的上限）高；各平台渲染结果一致。缺点也非常明显：需要完全重新学习 DSL（QML/Dart），以及难以适配中国特色的端：小程序。")]),t._v(" "),e("li",[t._v("Web 技术型：把 Web 技术（JavaScript，CSS）带到移动开发中，自研布局引擎处理 CSS，使用 JavaScript 写业务逻辑，使用流行的前端框架作为 DSL，各端分别使用各自的原生组件渲染。代表框架是 React Native 和 Weex，这样做的优点有：开发迅速、复用前端生态、易于学习上手；缺点有：交互复杂时难以写出高性能的代码，这类框架的设计就必然导致 JS 和 Native  之间需要通信，由于没有渲染引擎，使用各端的原生组件渲染，相同代码渲染的一致性没有第一种高。")]),t._v(" "),e("li",[t._v("JavaScript 编译型：Taro、WePY、uni-app、mpvue、chameleon，它们的原理也都大同小异：先以 JavaScript 作为基础选定一个 DSL 框架，以这个 DSL 框架为标准在各端分别编译为不同的代码，各端分别有一个运行时框架或兼容组件库保证代码正确运行。这类框架最大优点和创造的最大原因就是小程序，因为第一第二种框架其实除了可以跨系统平台之外，也都能编译运行在浏览器中。另外一个优点是在移动端一般会编译到 React Native/Weex，所以它们也都拥有 Web 技术型框架的优点。当 bug 出现时，问题的根源可能出在运行时、编译时、组件库以及三者依赖的库等等各个方面。")])]),t._v(" "),e("p",[t._v("但这并不意味着这类为了小程序而设计的多端框架就都不堪大用。首先现在各巨头超级 App 的小程序百花齐放，框架会为了抹平小程序做了许多工作，这些工作在大部分情况下是不需要开发者关心的。其次是许多业务类型并不需要复杂的逻辑和交互，没那么容易触发到框架底层依赖的 bug。")]),t._v(" "),e("p",[t._v("到底用哪个呢？")]),t._v(" "),e("p",[t._v("如果不介意尝鲜和学习 DSL 的话，完全可以尝试 WePY2.0 和 chameleon，一个是酝酿了很久的 2.0 全新升级，一个有专门针对多端开发的多态协议。")]),t._v(" "),e("p",[t._v("uni-app 和 Taro 相比起来就更像是「水桶型」框架，从工具、UI 库，开发体验、多端支持等各方面来看都没有明显的短板。而 mpvue 由于开发一度停滞，现在看来各个方面都不如在小程序端基于它的 uni-app 。")]),t._v(" "),e("h2",{attrs:{id:"_02-初始化项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_02-初始化项目"}},[t._v("#")]),t._v(" 02 初始化项目")]),t._v(" "),e("p",[t._v("本节将基于官网的教程，带领大家初始化我们的项目。")]),t._v(" "),e("p",[t._v("uni-app支持通过可视化界面、vue-cli命令行 两种方式快速创建项目。因为第一种需要安装官方IDE，而我们基于VScode 开发，所以我们使用第二种方式。")]),t._v(" "),e("h3",{attrs:{id:"_2-1-环境安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-环境安装"}},[t._v("#")]),t._v(" 2.1 环境安装")]),t._v(" "),e("p",[t._v("全局安装vue-cli")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install -g @vue/cli\n")])])]),e("h3",{attrs:{id:"_2-2-创建项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-创建项目"}},[t._v("#")]),t._v(" 2.2 创建项目")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("vue create -p dcloudio/uni-preset-vue fs02-uni-study\n")])])]),e("p",[t._v("此时，会提示选择项目模板，初次体验建议选择 hello uni-app 项目模板。")]),t._v(" "),e("h3",{attrs:{id:"_2-3-运行并发布uni-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-运行并发布uni-app"}},[t._v("#")]),t._v(" 2.3 运行并发布uni-app")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm run dev:%PLATFORM%\nnpm run build:%PLATFORM%\n")])])]),e("p",[t._v("%PLATFORM% 可取值如下：")]),t._v(" "),e("ul",[e("li",[t._v("h5\tH5")]),t._v(" "),e("li",[t._v("mp-alipay\t支付宝小程序")]),t._v(" "),e("li",[t._v("mp-baidu\t百度小程序")]),t._v(" "),e("li",[t._v("mp-weixin\t微信小程序")]),t._v(" "),e("li",[t._v("mp-toutiao\t字节跳动小程序")]),t._v(" "),e("li",[t._v("mp-qq\tqq 小程序")])]),t._v(" "),e("p",[t._v("dev 模式编译出的各平台代码存放于根目录下的 /dist/dev/目录，打开各平台开发工具选择对应平台目录即可进行预览（h5 平台不会在此目录，存在于缓存中）；")]),t._v(" "),e("p",[t._v("build 模式编译出的各平台代码存放于根目录下的 /dist/build/ 目录，发布时选择此目录进行发布；")]),t._v(" "),e("p",[t._v("dev 和 build 模式的区别：")]),t._v(" "),e("ul",[e("li",[t._v("dev 模式有 SourceMap 可以方便的进行断点调试；")]),t._v(" "),e("li",[t._v("build 模式会将代码进行压缩，体积更小更适合发布为正式版应用；\n进行 环境判断 时，dev 模式 process.env.NODE_ENV 的值为 development，build 模式 process.env.NODE_ENV 的值为 production。")])]),t._v(" "),e("h3",{attrs:{id:"_2-4-目录结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-目录结构"}},[t._v("#")]),t._v(" 2.4 目录结构")]),t._v(" "),e("p",[t._v("一个uni-app工程，默认包含如下目录及文件：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("┌─components            uni-app组件目录\n│  └─comp-a.vue         可复用的a组件\n├─hybrid                存放本地网页的目录\n├─platforms             存放各平台专用页面的目录\n├─pages                 业务页面文件存放的目录\n│  ├─index\n│  │  └─index.vue       index页面\n│  └─list\n│     └─list.vue        list页面\n├─static                存放应用引用静态资源（如图片、视频等）的目录，注意：静态资源只能存放于此\n├─wxcomponents          存放小程序组件的目录\n├─main.js               Vue初始化入口文件\n├─App.vue               应用配置，用来配置App全局样式以及监听 应用生命周期\n├─manifest.json         配置应用名称、appid、logo、版本等打包信息\n└─pages.json            配置页面路由、导航条、选项卡等页面类信息\n")])])]),e("p",[t._v("注意：")]),t._v(" "),e("ul",[e("li",[t._v("static 目录下的 js 文件不会被编译，如果里面有 es6 的代码，不经过转换直接运行，在手机设备上会报错。")]),t._v(" "),e("li",[t._v("css、less/scss 等资源同样不要放在 static 目录下，建议这些公用的资源放在 common 目录下。")])]),t._v(" "),e("h2",{attrs:{id:"_03-基础用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_03-基础用法"}},[t._v("#")]),t._v(" 03 基础用法")]),t._v(" "),e("p",[t._v("本节我们主要结合项目实战，熟悉一下uni-app的开发常识。")]),t._v(" "),e("h3",{attrs:{id:"_3-1-pages-json文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-pages-json文件"}},[t._v("#")]),t._v(" 3.1 pages.json文件")]),t._v(" "),e("p",[t._v("pages.json 文件用来对 uni-app 进行全局配置，决定页面文件的路径、窗口样式、原生的导航栏、底部的原生tabbar 等。")]),t._v(" "),e("p",[t._v("它类似微信小程序中app.json的页面管理部分。注意定位权限申请等原属于app.json的内容，在uni-app中是在manifest中配置。")]),t._v(" "),e("p",[t._v("以下是我们学习项目配置选项的pages.json：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('{\n\t"pages": [ \n    {\n\t\t\t"path": "pages/index/index",\n\t\t\t"style": {\n\t\t\t\t"navigationBarTitleText": "首页"\n\t\t\t}\n    },\n    {\n\t\t\t"path": "pages/index/articleDetail",\n\t\t\t"style": {\n        "navigationBarTitleText": "文章详情",\n          "disableScroll": true\n\t\t\t}\n    },\n    {\n\t\t\t"path": "pages/student/studentInfo",\n\t\t\t"style": {\n        "navigationBarTitleText": "孩子详情",\n          "disableScroll": true\n\t\t\t}\n    },\n    {\n\t\t\t"path": "pages/student/recordDetail",\n\t\t\t"style": {\n\t\t\t\t"navigationBarTitleText": "作品详情"\n\t\t\t}\n    },\n    {\n\t\t\t"path": "pages/student/studentEdit",\n\t\t\t"style": {\n\t\t\t\t"navigationBarTitleText": "编辑信息"\n\t\t\t}\n    },\n    {\n\t\t\t"path": "pages/mine/mine",\n\t\t\t"style": {\n\t\t\t\t"navigationBarTitleText": "我的"\n\t\t\t}\n    },\n    {\n\t\t\t"path": "pages/user/setting",\n\t\t\t"style": {\n\t\t\t\t"navigationBarTitleText": "设置"\n\t\t\t}\n        },\n    {\n      "path": "pages/mine/about",\n      "style": {\n          "navigationBarTitleText": "关于我们"\n      }\n    },\n    {\n      "path": "pages/user/login",\n      "style": {\n          "navigationBarTitleText": "登录"\n      }\n    },\n    {\n      "path": "pages/user/smsLogin",\n      "style": {\n          "navigationBarTitleText": "验证码注册登录"\n      }\n    },\n    {\n      "path": "pages/user/userInfo",\n      "style": {\n          "navigationBarTitleText": "基本信息"\n      }\n    },\n    {\n      "path": "pages/user/password",\n      "style": {\n          "navigationBarTitleText": "更改密码"\n      }\n    },\n    {\n      "path": "pages/user/mobile",\n      "style": {\n          "navigationBarTitleText": "更改手机"\n      }\n    }\n  ],\n  "tabBar": {\n    "backgroundColor": "#fff",\n    "color": "#000",\n    "selectedColor": "#3397e4",\n    "borderStyle": "black",\n    "list": [{\n        "pagePath": "pages/index/index",\n        "iconPath": "/static/tabs/home_normal.png",\n        "selectedIconPath": "/static/tabs/home_selected.png",\n        "text": "首页"\n    }, {\n        "pagePath": "pages/mine/mine",\n        "iconPath": "/static/tabs/mine_normal.png",\n        "selectedIconPath": "/static/tabs/mine_selected.png",\n        "text": "我的"\n    }]\n    },\n\t"globalStyle": {\n\t\t"navigationBarTextStyle": "white",\n\t\t"navigationBarTitleText": "uni-app",\n\t\t"navigationBarBackgroundColor": "#3397e4",\n\t\t"backgroundColor": "#F8F8F8"\n\t}\n}\n')])])]),e("p",[t._v("globalStyle 用于设置应用的状态栏、导航条、标题、窗口背景色等。")]),t._v(" "),e("p",[t._v("pages 节点配置应用由哪些页面组成，pages 节点接收一个数组，数组每个项都是一个对象。")]),t._v(" "),e("ul",[e("li",[t._v("pages节点的第一项为应用入口页（即首页）")]),t._v(" "),e("li",[t._v("应用中新增/减少页面，都需要对 pages 数组进行修改")]),t._v(" "),e("li",[t._v("文件名不需要写后缀，框架会自动寻找路径下的页面资源")]),t._v(" "),e("li",[t._v("style：用于设置每个页面的状态栏、导航条、标题、窗口背景色等，页面中配置项会覆盖 globalStyle 中相同的配置项。")])]),t._v(" "),e("p",[t._v("如果应用是一个多 tab 应用，可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页。")]),t._v(" "),e("ul",[e("li",[t._v("当设置 position 为 top 时，将不会显示 icon")]),t._v(" "),e("li",[t._v("tabBar 中的 list 是一个数组，只能配置最少2个、最多5个 tab，tab 按数组的顺序排序。")]),t._v(" "),e("li",[t._v("tabbar 切换第一次加载时可能渲染不及时，可以在每个tabbar页面的onLoad生命周期里先弹出一个等待雪花（hello uni-app使用了此方式）")]),t._v(" "),e("li",[t._v("tabbar 的页面展现过一次后就保留在内存中，再次切换 tabbar 页面，只会触发每个页面的onShow，不会再触发onLoad。")]),t._v(" "),e("li",[t._v("顶部的 tabbar 目前仅微信小程序上支持。需要用到顶部选项卡的话，建议不使用 tabbar 的顶部设置，而是自己做顶部选项卡，可参考 hello uni-app->模板->顶部选项卡。")])]),t._v(" "),e("h3",{attrs:{id:"_3-2-manifest-json文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-manifest-json文件"}},[t._v("#")]),t._v(" 3.2 manifest.json文件")]),t._v(" "),e("p",[t._v("manifest.json 文件是应用的配置文件，用于指定应用的名称、图标、权限等。")]),t._v(" "),e("p",[t._v("uni-app 的 appid 由 DCloud 云端分配，主要用于 DCloud 相关的云服务，请勿自行修改。")]),t._v(" "),e("p",[t._v("注意区分 uni-app 的 appid 与微信小程序、iOS 等其它平台分配的 appid，以及第三方 SDK 的 appid。")]),t._v(" "),e("p",[t._v("networkTimeout：各类网络请求的超时时间，单位均为毫秒")]),t._v(" "),e("h3",{attrs:{id:"_3-3-package-json文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-package-json文件"}},[t._v("#")]),t._v(" 3.3 package.json文件")]),t._v(" "),e("p",[t._v("通过在package.json文件中增加uni-app扩展节点，可实现自定义条件编译平台（如钉钉小程序、微信服务号等平台）。")]),t._v(" "),e("p",[t._v("package.json扩展配置用法（拷贝代码记得去掉注释！）：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('{\n    /**\n     package.json其它原有配置 \n     */\n    "uni-app": {// 扩展配置\n        "scripts": {\n            "custom-platform": { //自定义编译平台配置，可通过cli方式调用\n                "title":"自定义扩展名称", // 在HBuilderX中会显示在 运行/发行 菜单中\n                "BROWSER":"",  //运行到的目标浏览器，仅当UNI_PLATFORM为h5时有效\n                "env": {//环境变量\n                    "UNI_PLATFORM": ""  //基准平台 \n                 },\n                "define": { //自定义条件编译\n                    "CUSTOM-CONST": true //自定义条件编译常量，建议为大写\n                }\n            }\n        }    \n    }\n}\n')])])]),e("ul",[e("li",[t._v("UNI_PLATFORM仅支持填写uni-app默认支持的基准平台，目前仅限如下枚举值：h5、mp-weixin、mp-alipay、mp-baidu、mp-toutiao、mp-qq")]),t._v(" "),e("li",[t._v("BROWSER 仅在UNI_PLATFORM为h5时有效,目前仅限如下枚举值：Chrome、Firefox、IE、Edge、Safari、HBuilderX")]),t._v(" "),e("li",[t._v("package.json文件中不允许出现注释，否则扩展配置无效")])]),t._v(" "),e("h3",{attrs:{id:"_3-3-vue-config-js文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-vue-config-js文件"}},[t._v("#")]),t._v(" 3.3 vue.config.js文件")]),t._v(" "),e("p",[t._v("vue.config.js 是一个可选的配置文件，如果项目的根目录中存在这个文件，那么它会被自动加载，一般用于配置 webpack 等编译选项。")]),t._v(" "),e("p",[t._v("publicPath 不支持，如果需要配置，请在 manifest.json->h5->router->base 中配置。")]),t._v(" "),e("p",[t._v("使用cli项目时，默认情况下 babel-loader 会忽略所有 node_modules 中的文件。如果你想要通过 Babel 显式转译一个依赖，可以在transpileDependencies中列出来。")]),t._v(" "),e("h3",{attrs:{id:"_3-4-uni-scss文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-uni-scss文件"}},[t._v("#")]),t._v(" 3.4 uni.scss文件")]),t._v(" "),e("p",[t._v("uni.scss文件的用途是为了方便整体控制应用的风格。比如按钮颜色、边框风格，uni.scss文件里预置了一批scss变量预置。")]),t._v(" "),e("p",[t._v("uni-app 官方扩展插件（uni ui）及 插件市场 上很多三方插件均使用了这些样式变量，如果你是插件开发者，建议你使用 scss 预处理，并在插件代码中直接使用这些变量（无需 import 这个文件），方便用户通过搭积木的方式开发整体风格一致的App。")]),t._v(" "),e("p",[t._v("uni.scss是一个特殊文件，在代码中无需 import 这个文件即可在scss代码中使用这里的样式变量。uni-app的编译器在webpack配置中特殊处理了这个uni.scss，使得每个scss文件都被注入这个uni.scss，达到全局可用的效果。如果开发者想要less、stylus的全局使用，需要在vue.config.js中自行配置webpack策略。")]),t._v(" "),e("h3",{attrs:{id:"_3-5-app-vue文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-app-vue文件"}},[t._v("#")]),t._v(" 3.5 App.vue文件")]),t._v(" "),e("p",[t._v("App.vue是uni-app的主组件，所有页面都是在App.vue下进行切换的，是页面入口文件。但App.vue本身不是页面，这里不能编写视图元素。")]),t._v(" "),e("p",[t._v("这个文件的作用包括：调用应用生命周期函数、配置全局样式、配置全局的存储globalData")]),t._v(" "),e("p",[t._v("应用生命周期仅可在App.vue中监听，在页面监听无效。")]),t._v(" "),e("p",[t._v("uni-app 支持如下应用生命周期函数：")]),t._v(" "),e("ul",[e("li",[t._v("onLaunch\t当uni-app 初始化完成时触发（全局只触发一次）")]),t._v(" "),e("li",[t._v("onShow\t当 uni-app 启动，或从后台进入前台显示")]),t._v(" "),e("li",[t._v("onHide\t当 uni-app 从前台进入后台")]),t._v(" "),e("li",[t._v("onError\t当 uni-app 报错时触发")])]),t._v(" "),e("p",[t._v("在App.vue文件里使用生命周期函数，如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<script>  \n    export default {  \n        onLaunch: function() {  \n            console.log('App Launch，app启动')  \n        },  \n        onShow: function() {  \n            console.log('App Show，app展现在前台')  \n        },  \n        onHide: function() {  \n            console.log('App Hide，app不再展现在前台')  \n        }  \n    }  \n<\/script>\n")])])]),e("p",[t._v("globalData: 小程序有globalData，这是一种简单的全局变量机制。这套机制在uni-app里也可以使用，并且全端通用。")]),t._v(" "),e("p",[t._v("在App.vue中，可以一些定义全局通用样式，例如需要加一个通用的背景色，首屏页面渲染的动画等都可以写在App.vue中。")]),t._v(" "),e("h3",{attrs:{id:"_3-6-main-js文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-main-js文件"}},[t._v("#")]),t._v(" 3.6 main.js文件")]),t._v(" "),e("p",[t._v("main.js是uni-app的入口文件，主要作用是初始化vue实例、定义全局组件、使用需要的插件如vuex。")]),t._v(" "),e("p",[t._v("首先引入了Vue库和App.vue，创建了一个vue实例，并且挂载vue实例。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import Vue from 'vue'\nimport App from './App'\nimport pageHead from './components/page-head.vue' //全局引用page-head组件\n\nVue.config.productionTip = false\nVue.component('page-head', pageHead) //全局注册page-head组件，每个页面将可以直接使用该组件\nApp.mpType = 'app'\n\nconst app = new Vue({\n    ...App\n})\napp.$mount() //挂载Vue实例\n")])])]),e("p",[t._v("使用Vue.use引用插件，使用Vue.prototype添加全局变量，使用Vue.component注册全局组件。无法使用vue-router，路由须在pages.json中进行配置。如果开发者坚持使用vue-router，可以在插件市场找到转换插件。")]),t._v(" "),e("h2",{attrs:{id:"_04-使用组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_04-使用组件"}},[t._v("#")]),t._v(" 04 使用组件")]),t._v(" "),e("p",[t._v("uni-app为开发者提供了一系列基础组件，类似HTML里的基础标签元素。但uni-app的组件与HTML不同，而是与小程序相同，更适合手机端使用。")]),t._v(" "),e("p",[t._v("虽然不推荐使用HTML标签，但实际上如果开发者写了div等标签，在编译到非H5平台时也会被编译器转换为view标签，类似的还有span转text、a转navigator等，包括css里的元素选择器也会转。但为了管理方便、策略统一，新写代码时仍然建议使用view等组件。")]),t._v(" "),e("p",[t._v("开发者可以通过组合这些基础组件进行快速开发。 基于内置的基础组件，可以开发各种扩展组件，组件规范与vue组件相同。")]),t._v(" "),e("h3",{attrs:{id:"_4-1-什么是组件？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-什么是组件？"}},[t._v("#")]),t._v(" 4.1 什么是组件？")]),t._v(" "),e("p",[t._v("组件是视图层的基本组成单元，一个组件包括开始标签和结束标签，标签上可以写属性，并对属性赋值。内容则写在两个标签之内。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<template>\n    <view>\n        <tagname property="value">\n            content\n        </tagname>\n    </view>\n</template>\n')])])]),e("ul",[e("li",[t._v("所有组件与属性名都是小写，单词之间以连字符-连接。")]),t._v(" "),e("li",[t._v("根节点为 "),e("code",[t._v("<template>，这个 <template>")]),t._v(" 下只能且必须有一个根"),e("code",[t._v("<view")]),t._v(">组件。这是vue单文件组件规范。")]),t._v(" "),e("li",[t._v("平台差异说明若无特殊说明，则表示所有平台均支持。")])]),t._v(" "),e("p",[t._v("所有组件都有的属性：\n属性名\t   类型\t          描述\t          注解\nid\t    String\t      组件的唯一标示\t 保持整个页面唯一\nclass\t  String\t      组件的样式类\t   在对应的 css 中定义的样式类\nstyle\t  String\t      组件的内联样式\t 可以动态设置的内联样式\nhidden\tBoolean\t      组件是否隐藏\t   所有组件默认是显示的\ndata-*\tAny\t          自定义属性\t     组件上触发的事件时，会发送给事件处理函数\n@*\t    EventHandler\t组件的事件\t     详见各组件详细文档，事件绑定参考 事件处理器")]),t._v(" "),e("p",[t._v("几乎所有组件都有各自自定义的属性，可以对该组件的功能或样式进行修饰，请参考各个组件的定义。")]),t._v(" "),e("h3",{attrs:{id:"_4-2-视图容器组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-视图容器组件"}},[t._v("#")]),t._v(" 4.2 视图容器组件")]),t._v(" "),e("ul",[e("li",[t._v("view\t视图容器，类似于HTML中的div")]),t._v(" "),e("li",[t._v("scroll-view\t可滚动视图容器")]),t._v(" "),e("li",[t._v("swiper\t滑块视图容器")])]),t._v(" "),e("h3",{attrs:{id:"_4-3-基础内容组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-基础内容组件"}},[t._v("#")]),t._v(" 4.3 基础内容组件")]),t._v(" "),e("ul",[e("li",[t._v("icon\t图标")]),t._v(" "),e("li",[t._v("text\t文字")]),t._v(" "),e("li",[t._v("rich-text\t富文本")]),t._v(" "),e("li",[t._v("progress\t进度条")])]),t._v(" "),e("h3",{attrs:{id:"_4-4-表单组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-表单组件"}},[t._v("#")]),t._v(" 4.4 表单组件")]),t._v(" "),e("ul",[e("li",[t._v("button\t按钮")]),t._v(" "),e("li",[t._v("form\t表单")]),t._v(" "),e("li",[t._v("input\t输入框")]),t._v(" "),e("li",[t._v("checkbox\t多项选择器")]),t._v(" "),e("li",[t._v("radio\t单项选择器")]),t._v(" "),e("li",[t._v("picker\t弹出式列表选择器")]),t._v(" "),e("li",[t._v("picker-view\t窗体内嵌式列表选择器")]),t._v(" "),e("li",[t._v("slider\t滑动选择器")]),t._v(" "),e("li",[t._v("switch\t开关选择器")]),t._v(" "),e("li",[t._v("label\t标签")])]),t._v(" "),e("h3",{attrs:{id:"_4-5-媒体组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-媒体组件"}},[t._v("#")]),t._v(" 4.5 媒体组件")]),t._v(" "),e("ul",[e("li",[t._v("audio\t音频")]),t._v(" "),e("li",[t._v("camera\t相机")]),t._v(" "),e("li",[t._v("image\t图片")]),t._v(" "),e("li",[t._v("video\t视频")]),t._v(" "),e("li",[t._v("live-player\t直播播放")]),t._v(" "),e("li",[t._v("live-pusher\t实时音视频录制，也称直播推流")])]),t._v(" "),e("h3",{attrs:{id:"_4-6-扩展组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-扩展组件"}},[t._v("#")]),t._v(" 4.6 扩展组件")]),t._v(" "),e("p",[t._v("uni-ui是DCloud提供的一个跨端ui库，它是基于vue组件的、flex布局的、无dom的跨全端ui框架。")]),t._v(" "),e("p",[t._v("uni-ui不包括基础组件，它是基础组件的补充。")]),t._v(" "),e("p",[t._v("安装 uni-ui")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install @dcloudio/uni-ui\n")])])]),e("p",[t._v("在 script 中引用组件：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import {uniBadge} from '@dcloudio/uni-ui'\nexport default {\n    components: {uniBadge}\n}\n")])])]),e("h2",{attrs:{id:"_05-使用api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_05-使用api"}},[t._v("#")]),t._v(" 05 使用API")]),t._v(" "),e("p",[t._v("uni-app的js API由标准ECMAScript的js API 和 uni 扩展 API 这两部分组成。")]),t._v(" "),e("h3",{attrs:{id:"_5-1-标准js和浏览器js的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-标准js和浏览器js的区别"}},[t._v("#")]),t._v(" 5.1 标准js和浏览器js的区别")]),t._v(" "),e("p",[t._v("uni-app的js代码，h5端运行于浏览器中。非h5端，Android平台运行在v8引擎中，iOS平台运行在iOS自带的jscore引擎中。")]),t._v(" "),e("p",[t._v("非H5端，虽然不支持window、document、navigator等浏览器的js API，但也支持标准ECMAScript。")]),t._v(" "),e("p",[t._v("开发者不要把浏览器里的js等价于标准js。")]),t._v(" "),e("p",[t._v("ECMAScript由Ecma国际管理，是基础js语法。浏览器基于标准js扩充了window、document等js API；Node.js基于标准js扩充了fs等模块；小程序也基于标准js扩展了各种wx.xx、my.xx、swan.xx的API。")]),t._v(" "),e("p",[t._v("所以uni-app的非H5端，一样支持标准js，支持if、for等语法，支持字符串、数组、时间等变量及各种处理方法。仅仅是不支持浏览器专用对象。")]),t._v(" "),e("h3",{attrs:{id:"_5-2-路由跳转"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-路由跳转"}},[t._v("#")]),t._v(" 5.2 路由跳转")]),t._v(" "),e("ul",[e("li",[t._v("uni.navigateTo\t保留当前页面，跳转到应用内的某个页面，使用uni.navigateBack可以返回到原页面")]),t._v(" "),e("li",[t._v("uni.redirectTo\t关闭当前页面，跳转到应用内的某个页面")]),t._v(" "),e("li",[t._v("uni.reLaunch\t关闭所有页面，打开到应用内的某个页面")]),t._v(" "),e("li",[t._v("uni.switchTab\t跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面")]),t._v(" "),e("li",[t._v("uni.navigateBack\t关闭当前页面，返回上一页面或多级页面")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//在起始页面跳转到test.vue页面并传递参数\nuni.navigateTo({\n    url: 'test?id=1&name=uniapp'\n});\n\n// 在test.vue页面接受参数\nexport default {\n    onLoad: function (option) { //option为object类型，会序列化上个页面传递的参数\n        console.log(option.id); //打印出上个页面传递的参数。\n        console.log(option.name); //打印出上个页面传递的参数。\n    }\n}\n")])])]),e("p",[t._v("url有长度限制，太长的字符串会传递失败，可使用窗体通信、全局变量，或encodeURIComponent等多种方式解决。")]),t._v(" "),e("ul",[e("li",[t._v("页面跳转路径有层级限制，不能无限制跳转新页面")]),t._v(" "),e("li",[t._v("跳转到 tabBar 页面只能使用 switchTab 跳转")]),t._v(" "),e("li",[t._v("路由API的目标页面必须是在pages.json里注册的vue页面。如果想打开web url，在App平台可以使用 plus.runtime.- - openURL或web-view组件；H5平台使用 window.open；小程序平台使用web-view组件（url需在小程序的联网白名单中）。")])]),t._v(" "),e("h3",{attrs:{id:"_5-3-交互反馈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-交互反馈"}},[t._v("#")]),t._v(" 5.3 交互反馈")]),t._v(" "),e("ul",[e("li",[t._v("uni.showToast\t显示提示框")]),t._v(" "),e("li",[t._v("uni.showLoading\t显示加载提示框")]),t._v(" "),e("li",[t._v("uni.hideToast\t隐藏提示框")]),t._v(" "),e("li",[t._v("uni.hideLoading\t隐藏提示框")]),t._v(" "),e("li",[t._v("uni.showModal\t显示模态弹窗")]),t._v(" "),e("li",[t._v("uni.showActionSheet\t显示菜单列表")])]),t._v(" "),e("h3",{attrs:{id:"_5-4-发起请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-发起请求"}},[t._v("#")]),t._v(" 5.4 发起请求")]),t._v(" "),e("p",[t._v("uni.request\t发起网络请求: 在各个小程序平台运行时，网络相关的 API 在使用前需要配置域名白名单。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("uni.request({\n    url: 'https://www.example.com/request', //仅为示例，并非真实接口地址。\n    data: {\n        text: 'uni.request'\n    },\n    header: {\n        'custom-header': 'hello' //自定义请求头信息\n    },\n    success: (res) => {\n        console.log(res.data);\n        this.text = 'request success';\n    }\n});\n")])])]),e("ul",[e("li",[t._v("如果希望返回一个 requestTask 对象，需要至少传入 success / fail / complete 参数中的一个。")]),t._v(" "),e("li",[t._v("如果没有传入 success / fail / complete 参数，则会返回封装后的 Promise 对象。")]),t._v(" "),e("li",[t._v("请求的 header 中 content-type 默认为 application/json。")]),t._v(" "),e("li",[t._v("网络请求的 超时时间 可以统一在 manifest.json 中配置 networkTimeout。")]),t._v(" "),e("li",[t._v("H5 端本地调试需注意跨域问题")])]),t._v(" "),e("h3",{attrs:{id:"_5-5-数据缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-数据缓存"}},[t._v("#")]),t._v(" 5.5 数据缓存")]),t._v(" "),e("ul",[e("li",[t._v("uni.getStorage\t获取本地数据缓存")]),t._v(" "),e("li",[t._v("uni.getStorageSync\t获取本地数据缓存")]),t._v(" "),e("li",[t._v("uni.setStorage\t设置本地数据缓存")]),t._v(" "),e("li",[t._v("uni.setStorageSync\t设置本地数据缓存")]),t._v(" "),e("li",[t._v("uni.getStorageInfo\t获取本地缓存的相关信息")]),t._v(" "),e("li",[t._v("uni.getStorageInfoSync\t获取本地缓存的相关信息")]),t._v(" "),e("li",[t._v("uni.removeStorage\t删除本地缓存内容")]),t._v(" "),e("li",[t._v("uni.removeStorageSync\t删除本地缓存内容")]),t._v(" "),e("li",[t._v("uni.clearStorage\t清理本地数据缓存")]),t._v(" "),e("li",[t._v("uni.clearStorageSync\t清理本地数据缓存")])]),t._v(" "),e("h3",{attrs:{id:"_5-6-图片"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-图片"}},[t._v("#")]),t._v(" 5.6 图片")]),t._v(" "),e("ul",[e("li",[t._v("uni.chooseImage\t从相册选择图片，或者拍照")]),t._v(" "),e("li",[t._v("uni.previewImage\t预览图片")]),t._v(" "),e("li",[t._v("uni.getImageInfo\t获取图片信息")]),t._v(" "),e("li",[t._v("uni.saveImageToPhotosAlbum\t保存图片到系统相册")])]),t._v(" "),e("h3",{attrs:{id:"_5-7-上传、下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-上传、下载"}},[t._v("#")]),t._v(" 5.7 上传、下载")]),t._v(" "),e("ul",[e("li",[t._v("uni.uploadFile\t上传文件")]),t._v(" "),e("li",[t._v("uni.downloadFile\t下载文件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("uni.chooseImage({\n    success: (chooseImageRes) => {\n        const tempFilePaths = chooseImageRes.tempFilePaths;\n        uni.uploadFile({\n            url: 'https://www.example.com/upload', //仅为示例，非真实的接口地址\n            filePath: tempFilePaths[0],\n            name: 'file',\n            formData: {\n                'user': 'test'\n            },\n            success: (uploadFileRes) => {\n                console.log(uploadFileRes.data);\n            }\n        });\n    }\n});\n")])])]),e("p",[t._v("如果希望返回一个 uploadTask 对象，需要至少传入 success / fail / complete 参数中的一个。通过 uploadTask，可监听上传进度变化事件，以及取消上传任务。")]),t._v(" "),e("h2",{attrs:{id:"_06-第三方库的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_06-第三方库的使用"}},[t._v("#")]),t._v(" 06 第三方库的使用")]),t._v(" "),e("h3",{attrs:{id:"_6-1-为何使用第三方库或插件？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-为何使用第三方库或插件？"}},[t._v("#")]),t._v(" 6.1 为何使用第三方库或插件？")]),t._v(" "),e("p",[t._v("从企业的角度来讲，主要是了降低成本和提升开发效率。")]),t._v(" "),e("p",[t._v("从应用的角度来讲，主要是有时官方没有提供较好的解决方案，比如滚动的处理，scroll-view 实现的加载刷新实属体验极差。")]),t._v(" "),e("h3",{attrs:{id:"_6-2-什么是mescroll-uni？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-什么是mescroll-uni？"}},[t._v("#")]),t._v(" 6.2 什么是mescroll-uni？")]),t._v(" "),e("p",[t._v("官方 http://www.mescroll.com/ 介绍：mescroll--精致的下拉刷新和上拉加载js框架。而mescroll-uni是mescroll的uni版本, 是在 uni-app 运行的下拉刷新和上拉加载的组件。")]),t._v(" "),e("ul",[e("li",[t._v("mescroll的uni版本, 是专门用在uni-app的下拉刷新和上拉加载的组件, 支持一套代码编译到iOS、Android、H5、小程序等多个平台")]),t._v(" "),e("li",[t._v("mescroll的uni版本, 继承了mescroll.js的实用功能: 自动处理分页, 自动控制无数据, 空布局提示, 回到顶部按钮 ..")]),t._v(" "),e("li",[t._v("mescroll的uni版本, 丰富的案例, 自由灵活的api, 超详细的注释, 可让您快速自定义真正属于自己的下拉上拉组件")]),t._v(" "),e("li",[t._v("mescroll的uni版本, 提供"),e("code",[t._v("<mescroll-body>和<mescroll-uni>")]),t._v("两个组件, 其中"),e("code",[t._v("<mescroll-body>")]),t._v("支持配置成系统自带的下拉组件")]),t._v(" "),e("li",[e("code",[t._v("<mescroll-body>")]),t._v("是1.2.1版本新增的组件, 用来填补"),e("code",[t._v("<mescroll-uni>")]),t._v("的不足。")])]),t._v(" "),e("h3",{attrs:{id:"_6-3-使用mescroll-uni"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-使用mescroll-uni"}},[t._v("#")]),t._v(" 6.3 使用mescroll-uni")]),t._v(" "),e("p",[t._v("mescroll支持npm安装:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install --save mescroll-uni\n")])])]),e("p",[t._v("但不推荐, 因为设置mescroll为全局组件, 编译到APP可能会失效 (如果APP端不注册全局组件, 可使用npm安装)。")]),t._v(" "),e("p",[t._v("所以最好的做法是直接去官网下载源码，放到我们的components目录下，自己封装一下，供各个页面调用，比如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<mescroll-uni \n  ref="mescrollRef"\n  :top="mescrollTop" \n  :down="{auto: false}"\n  bottom="10" \n  @down="onPullDown" \n  @up="onPullUp"\n  >\n  <view v-for="(item, index) in articles" :key="index" class="record-wrap">\n    <ArticleItem @onClick="onClick" :item="item"></ArticleItem>\n  </view>\n</mescroll-uni>\n\nimport MescrollUni from \'@/components/scroll-list/index.vue\';\nimport ArticleItem from \'@/components/items/ArticleItem\';\n\nexport default {\n  components: {\n    MescrollUni,\n    ArticleItem\n  },\n  data() {\n    return {\n      mescrollTop: 450,\n      indicatorDots: true,\n      autoplay: false,\n      interval: 2000,\n      duration: 500,\n      banners: [],\n      articles: [],\n      params: {\n        offset: 0,\n        limit: 5,\n        count: 0,\n        currentPage: 1,\n        shartItem: {}\n      },\n    };\n  },\n  methods: {\n    onPullDown(mescroll) {\n      this.params.offset = 0;\n      this.params.currentPage = 1;\n      this.banners = [];\n      this.articles = [];\n      this.getHomeData(mescroll);\n    },\n    onPullUp(mescroll) {\n      if (this.params.currentPage * 10 < this.params.count) {\n        this.params.offset = this.params.currentPage * this.params.limit;\n        this.params.currentPage += 1;\n        this.getHomeData(mescroll,);\n      }\n    },\n  },\n};\n\n')])])]),e("h2",{attrs:{id:"_07-多端兼容和打包上传"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_07-多端兼容和打包上传"}},[t._v("#")]),t._v(" 07 多端兼容和打包上传")]),t._v(" "),e("p",[t._v("uni-app 在发布到H5时支持所有vue的语法；发布到App和小程序时，由于平台限制，无法实现全部vue语法，但uni-app仍是是对vue语法支持度最高的跨端框架。")]),t._v(" "),e("p",[t._v("uni-app 已将常用的组件、JS API 封装到框架中，开发者按照 uni-app 规范开发即可保证多平台兼容，大部分业务均可直接满足。")]),t._v(" "),e("p",[t._v("但每个平台有自己的一些特性，因此会存在一些无法跨平台的情况。")]),t._v(" "),e("p",[t._v("大量写 if else，会造成代码执行性能低下和管理混乱,编译到不同的工程后二次修改，会让后续升级变的很麻烦。")]),t._v(" "),e("p",[t._v("在 C 语言中，通过 #ifdef、#ifndef 的方式，为 windows、mac 等不同 os 编译不同的代码。 uni-app 参考这个思路，为 uni-app 提供了条件编译手段，在一个工程里优雅的完成了平台个性化实现。")]),t._v(" "),e("h3",{attrs:{id:"_7-1-h5正常但小程序异常的可能性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-h5正常但小程序异常的可能性"}},[t._v("#")]),t._v(" 7.1 H5正常但小程序异常的可能性")]),t._v(" "),e("ul",[e("li",[t._v("v-html在h5和app-vue(v3编译模式)均支持，但小程序不支持")]),t._v(" "),e("li",[t._v("小程序要求连接的网址都要配白名单")])]),t._v(" "),e("h3",{attrs:{id:"_7-2-小程序正常，但h5异常的可能性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-小程序正常，但h5异常的可能性"}},[t._v("#")]),t._v(" 7.2 小程序正常，但H5异常的可能性")]),t._v(" "),e("ul",[e("li",[t._v("在 uni-app 2.4.7 以前，H5端不支持微信小程序自定义组件，即wxcomponets下的组件，此时可能产生兼容问题。从 2.4.7 起，H5也支持微信自定义组件，不再存在这这方面兼容问题。")]),t._v(" "),e("li",[t._v("使用了小程序专用的功能，比如微信卡卷、小程序插件、微信小程序云开发")])]),t._v(" "),e("h3",{attrs:{id:"_7-3-区别于传统-web-开发的注意"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-区别于传统-web-开发的注意"}},[t._v("#")]),t._v(" 7.3 区别于传统 web 开发的注意")]),t._v(" "),e("p",[t._v("你之前可能习惯自由的web开发，但目前各家小程序都有很多限制。 当然限制是为了在框架层更好的优化用户体验，所以小程序的体验要优于web。 并且这些限制只是写法的限制，并不影响功能。 如果你做过微信小程序开发，对这些限制应该已经很了解了。")]),t._v(" "),e("ul",[e("li",[t._v("非H5端，不能使用浏览器自带对象，比如document、window、localstorage、cookie等，更不能使用jquery等依赖这些浏览器对象的框架。因为各家小程序快应用都不支持这些对象。")]),t._v(" "),e("li",[t._v("uni的api是多端可用的。在条件编译区，每个平台的专有api也可以使用，比如wx.、plus.等api可以分别在微信下和app下使用。")]),t._v(" "),e("li",[t._v("出于降低小程序向uni-app迁移成本的考虑，wx的api在app里也可以直接运行，比如写wx.requst和uni.requst是一样的，但仍然建议仅在微信的条件编译区使用wx的api")]),t._v(" "),e("li",[t._v("uni-app的tag同小程序的tag，和HTML的tag不一样，比如div要改成view，span要改成text、a要改成navigator。")]),t._v(" "),e("li",[t._v("出于降低h5应用向uni-app迁移成本的考虑，写成div、span也可以运行在app和小程序上，因为uni-app编译器会把这些HTML标签编译为小程序标签。但仍然建议养成新习惯。")]),t._v(" "),e("li",[t._v("虽然大部分css样式在微信小程序和app中都可以支持，但推荐使用flex布局模型，这种布局更灵活高效且支持更多平台")]),t._v(" "),e("li",[t._v("单位方面，uni-app默认为rpx。这是一种可跨端的通用单位.")]),t._v(" "),e("li",[t._v("每个要显示的页面，都要放到pages目录下，新建一个页面所在的目录，然后放同名目录的vue文件，比如project/pages/lista/lista.vue，并且在pages.json里配置")]),t._v(" "),e("li",[t._v("自定义组件，放到component目录")]),t._v(" "),e("li",[t._v("静态资源如图片，固定放到static目录下。这是webpack、mpvue的规则")]),t._v(" "),e("li",[t._v("H5 版 uni-app 全支持 vue 语法，所以可能造成部分写法在 H5 端生效，在小程序或 App 端不生效。")]),t._v(" "),e("li",[t._v("H5 校验了更严格的 vue 语法，有些写法不规范会报警，比如： data 后面写对象会报警，必须写 function；不能修改 props 的值；组件最外层 template 节点下不允许包含多个节点等。")])]),t._v(" "),e("h3",{attrs:{id:"_7-4-打包部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-打包部署"}},[t._v("#")]),t._v(" 7.4 打包部署")]),t._v(" "),e("p",[t._v("不同平台的不一样，这里只提供微信小程序和H5的一些打包脚本参考，其中小程序的需要借助对应的开发者工具上传到对应的平台。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"h5": "rm src/api/url.js && cp src/api/urlH5.js src/api/url.js",\n"local": "rm src/api/url.js && cp src/api/urlLocal.js src/api/url.js",\n"prod": "rm src/api/url.js && cp src/api/urlWx.js src/api/url.js",\n"deployH5": "npm run pp && npm run pb && npm run pc && npm run pm2",\n"pm2": "pm2 deploy ecosystem.json production",\n"pp": "git reset --hard && git pull && npm i && npm run h5 ",\n"pc": "git add . && git commit -m \'deploy\' && git push",\n"pb": "rm -rf pdist && npm run build:h5 && mv dist/build/h5 pdist",\n"start": "npm run h5 && URL_ENV=production npm run dev:h5",\n"dev": "npm run h5 && npm run dev:h5",\n"swx": "npm run prod && npm run dev:mp-weixin",\n"dwx": "npm run local && npm run dev:mp-weixin",\n"deployWx": "npm run prod && npm run build:mp-weixin",\n"build:h5": "cross-env NODE_ENV=production UNI_PLATFORM=h5 vue-cli-service uni-build",\n"build:mp-weixin": "cross-env NODE_ENV=production UNI_PLATFORM=mp-weixin vue-cli-service uni-build",\n"dev:h5": "cross-env NODE_ENV=development UNI_PLATFORM=h5 vue-cli-service uni-serve",\n"dev:mp-weixin": "cross-env NODE_ENV=development UNI_PLATFORM=mp-weixin vue-cli-service uni-build --watch",\n')])])]),e("p",[t._v("所以我们部署h5时只需执行 npm run deployH5 即可，而打包微信小程序则需要执行 npm run deployWx，然后用微信开发者工具上传到微信的云服务器，审核通过后即可发布。")]),t._v(" "),e("h2",{attrs:{id:"_08-模拟面试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_08-模拟面试"}},[t._v("#")]),t._v(" 08 模拟面试")]),t._v(" "),e("p",[t._v("虽然本系列课的知识点，一般在面试中很少会涉及，不过对于一些工作超过三年的同学，还是会问到的，而对于初级工程师，如果也能有一定了解，则可在面试时加分，所以我们还是以问答的形式带大家回顾本系列课的学习内容。")]),t._v(" "),e("h3",{attrs:{id:"_8-1-什么是小程序？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-什么是小程序？"}},[t._v("#")]),t._v(" 8.1 什么是小程序？")]),t._v(" "),e("p",[t._v("2017年1月份小程序诞生，到现在已经超过3年的时间了，正在经历慢慢的被越来越多的人发现的过程。")]),t._v(" "),e("p",[t._v("微信小程序官网是这么介绍的：小程序是一种新的开放能力，开发者可以快速地开发一个小程序。小程序可以在微信内被便捷地获取和传播，同时具有出色的使用体验。")]),t._v(" "),e("p",[t._v("它实现了应用“触手可及”的梦想，用户扫一扫或者搜一下即可打开应用，也体现了“用完即走”的理念，用户不用关心是否安装太多应用的问题。")]),t._v(" "),e("p",[t._v("与传统app相比，小程序无需安装、卸载，用完即走，触手可及，与用户不是粉丝关系，是访问关系，后台数据是微信标准化数据，不能自由选取。")]),t._v(" "),e("p",[t._v("与应用商店相比，小程序没有应用商店，也不做应用分发平台，不能进行模糊搜索，覆盖的只是用户的特定场景下的注意力资源，满足用户特定场景的需求，不是完整的产品应用。")]),t._v(" "),e("p",[t._v("与公众号相比，小程序连接的是人与服务，有可能取代大部分的“服务号”，但无法完全取代订阅号，订阅号连接的是人与特定的产品化信息，小程序与公众号可相互自由跳转，彼此赋能。")]),t._v(" "),e("h3",{attrs:{id:"_8-2-小程序的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-小程序的实现原理"}},[t._v("#")]),t._v(" 8.2 小程序的实现原理")]),t._v(" "),e("p",[t._v("小程序是基于WEB规范，采用HTML,CSS和JS等搭建的一套框架，微信官方给它们取了一个很牛逼的名字：WXML,WXSS，但本质上还是在整个WEB体系之下构建的。")]),t._v(" "),e("p",[t._v("WXML，取这个名字的是微信的Xml，说到底就是xml的一个子集。WXML采用微信自定义的少量标签WXSS，大家可以理解为就是自定义的CSS。实现逻辑部分的JS还是通用的ES规范，并且runtime还是Webview（IOS WKWEBVIEW, ANDROID X5）。")]),t._v(" "),e("p",[t._v("微信开发者工具本身也是基于WEB技术体系实现的，nwjs+react，nwjs是什么：简单是说就是node+webkit，node提供给我们本地api能力，而webkit提供给我们web能力，两者结合就能让我们使用JS+HTML实现本地应用程序。")]),t._v(" "),e("p",[t._v("微信小程序的框架包含两部分View视图层、App Service逻辑层，View层用来渲染页面结构，AppService层用来逻辑处理、数据请求、接口调用，它们在两个进程（两个Webview）里运行。")]),t._v(" "),e("p",[t._v("视图层和逻辑层通过系统层的JSBridage进行通信，逻辑层把数据变化通知到视图层，触发视图层页面更新，视图层把触发的事件通知到逻辑层进行业务处理。")]),t._v(" "),e("p",[t._v("小程序的UI视图和逻辑处理是用多个webview实现的，逻辑处理的JS代码全部加载到一个Webview里面，称之为AppService，整个小程序只有一个，并且整个生命周期常驻内存，而所有的视图（wxml和wxss）都是单独的Webview来承载，称之为AppView。")]),t._v(" "),e("p",[t._v("所以一个小程序打开至少就会有2个webview进程，正式因为每个视图都是一个独立的webview进程，考虑到性能消耗，小程序不允许打开超过5个层级的页面，当然同是也是为了体验更好。")]),t._v(" "),e("p",[t._v("小程序底层还是基于Webview来实现的，并没有发明创造新技术，整个框架体系，比较清晰和简单，基于Web规范，保证现有技能价值的最大化，只需了解框架规范即可使用已有Web技术进行开发。")]),t._v(" "),e("h3",{attrs:{id:"_8-3-小程序和快应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-小程序和快应用"}},[t._v("#")]),t._v(" 8.3 小程序和快应用")]),t._v(" "),e("p",[t._v("小程序甚至让各大巨头都头疼不已，于是2018年初，小米、华为、中兴、金立、联想、魅族、努比亚、oppo、vivo 九大手机厂商联合起来搞事情了，推出了一个叫做「快应用」的项目。")]),t._v(" "),e("p",[t._v("快应用是个什么东西呢？其实也就是个桌面快捷方式，用户无需下载安装，即点即用，享受原生应用的性能体验。这一套东西一看，就是跟微信小程序对着干的，虽然标榜的东西不一样，其实本质上还是一样的，无非都是为了抢占手机桌面，抢占用户的时间。")]),t._v(" "),e("p",[t._v("现在随着微信小程序越来越火，以后只要一个微信就全部搞定了，不需要 App 了，微信类似于操作系统了，就没有手机操作系统发挥的空间了。这让手机厂商越来越难过，所以他们才会抱团取暖。")]),t._v(" "),e("p",[t._v("“快应用” 使用前端技术栈开发，原生渲染，同时具备 H5 页面和原生应用的双重优点。“快应用” 框架深度集成进各厂商手机系统中，可以在操作系统层面实现用户需求与应用服务间的无缝连接，提升用户的使用体验和应用服务的转化效率，同时支持生成桌面图标等留存能力。")]),t._v(" "),e("p",[t._v("一旦快应用在国内快速成长和发展起来，对于移动开发端的 Android 原生开发者肯定会造成一定的冲击，作为技术人时刻保持学习和成长是我们的必然要求，说实话，我最近发现好像很多技术都在前端化。")]),t._v(" "),e("ul",[e("li",[t._v("微信小程序支持跨平台，而“快程序”只支持 Android 平台。因此，“快应用”在这一点上无法无微信小程序相媲美；")]),t._v(" "),e("li",[t._v("微信的社交性。在当前，几乎每部智能手机都会安装微信，而且微信用户的粘性非常高。这就意味着，相对于“快应用”，微信小程序更容易引起用户的注意，更容易被用户打开。")]),t._v(" "),e("li",[t._v("快应用直接就是在手机厂商的手机桌面上自带，无需安装，而小程序可能需要打开微信才能启动小程序，多了一层操作，但是小程序可以发送快捷方式到桌面。")])]),t._v(" "),e("h3",{attrs:{id:"_8-4-如何看待多端开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-如何看待多端开发"}},[t._v("#")]),t._v(" 8.4 如何看待多端开发")]),t._v(" "),e("p",[t._v("移动互联网时代端的形态越来越多，每个端的设备载体也各种各样，在开发多端应用时需要根据各个端设备的特性开发不用的软件应用，端的形态也多种多样，Android、iOS、Web、微信小程序、支付宝小程序、快应用、百度智能小程序等大行其道。")]),t._v(" "),e("p",[t._v("当业务要求同时在不同的端都要求有所表现的时候，需要针对不同的端去编写多套代码并适配不同设备，人工成本、时间成本等都非常高，这时候只编写一套代码就能够适配到多端的能力就显得极为需要。")]),t._v(" "),e("p",[t._v("如果你想多端开发，提升效率，不想踩太多坑，uni-app相对更完善。")]),t._v(" "),e("p",[t._v("如果你只开发微信小程序，不做多端，那么使用uni-app、微信原生开发、taro是更优的选择。")]),t._v(" "),e("p",[t._v("如果你主要为了微信端和H5端，那么uni-app和taro都可以。可以根据自己熟悉的技术栈选择。")])])}),[],!1,null,null,null);a.default=s.exports}}]);